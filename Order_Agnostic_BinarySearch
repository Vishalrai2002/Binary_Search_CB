#include<bits/stdc++.h>
using namespace std;

/*
    ORDER AGNOSTIC SEARCH -->
    Means we don't know whether our array in sorted in ascending order or descending order
    so we have to first find the whether or array in sorted acc. to ascending order descending order
*/


// Inputs --> you may take array in ascening order or descendig order

int Ascendingbinarysearch(int *arr,int t,int s, int e){
    while(s<=e){
        int m=s+(e-s)/2;
        if(arr[m]==t){
            return m;
        }
        else if(t<arr[m]){
            e=m-1;
        }
        else{
            s=m+1;
        }
    }
    return -1;
}

int Decsendingbinarysearch(int *arr,int t,int s,int e){
    while(s<=e){
    int m=s+(e-s)/2;
        if(arr[m]==t){
           return m;
        }
        else if(t<arr[m]){
            s=m+1; // here this because we our array reverse sorted 
        }
        else{
            e=m-1;
        }
    }
    return -1;
}

int main(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    int t;
    cin>>t;
    if(arr[0]<arr[1]){
        cout<<Ascendingbinarysearch(arr,t,0,n-1);
    }
    else{
        cout<<Decsendingbinarysearch(arr,t,0,n-1);
    }
    return 0;
}
